#
# Question 2
# 


import random   # needed for get_move()


# global (state) variable 
# all_rocks: bool
all_rocks = False


# strings used for this question
rock = "rock"
paper = "paper"
scissors = "scissors"

input_prompt = "Rock-Paper-Scissors, play! [rock,paper,scissors,end]: "

output_computer_move = "Computer plays"
output_computer_win = "Computer wins"
output_user_win = "User wins"
output_tie = "Tie"
output_end = "Game stats ="


# get_move: None -> str
# Purpose: consumes nothing and produces a string
#    which is a "random" rock-paper-scissor move.
#    That is, it produces one of rock, paper, or scissors
# Examples:
#    get_move() => "paper"
#    get_move() => "rock"
#    get_move() => "paper"
#    get_move() => "scissors"
def get_move():
    if (all_rocks == True):
        return rock
    else:
        x = random.randint(1,3)
        if x==1:
            return rock
        elif x==2:
            return paper
        else:
            return scissors

## int int int-> int
## Consumes three integers representing the number of wins,losses or ties
## and produces the match statistic corresponding to the record.
##
def match_stats(wins,losses,ties):
    return 2* wins + ties - losses

## rock_paper_scissors_round: int int int-> none
def rock_paper_scissors_round(w,l,t):
    user_move= raw_input("Rock-Paper-Scissors, play! [rock,paper,scissors,end]: ")
    comp_move= get_move()
    if "end" == user_move:
        print output_end + " " + str( match_stats(w,l,t) )
        
    elif comp_move == user_move:
        print output_computer_move + " " + comp_move
        print output_tie
        return rock_paper_scissors_round(w , l , t+1)
        
    elif user_move == rock and comp_move == paper:
        print output_computer_move + " " + paper
        print output_computer_win
        return rock_paper_scissors_round(w , l+1 , t)
       
    elif comp_move == scissors:
        print output_computer_move + " " + scissors
        print output_user_win
        return rock_paper_scissors_round(w+1 , l , t)
        
    elif user_move == scissors and comp_move == rock:
        print output_computer_move + " " + rock
        print output_computer_win
        return rock_paper_scissors_round(w , l+1 , t)

    elif comp_move == paper:
        print output_computer_move + " " + paper
        print output_user_win
        return rock_paper_scissors_round(w+1 , l , t)
        
    elif user_move == paper and comp_move == scissors:
        print output_computer_move + " " + scissors
        print output_computer_win
        return rock_paper_scissors_round(w , l+1 , t)       

    elif comp_move == rock:
        print output_computer_move + " " + rock       
        print output_computer_win
        return rock_paper_scissors_round(w+1 , l , t)
 
## rock_paper_scissors: none -> none
## 
##
##
def rock_paper_scissors():
    rock_paper_scissors_round(0,0,0)        

    