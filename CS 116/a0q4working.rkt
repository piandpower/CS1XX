#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 22 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 15 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 22 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 19 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 640 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 350
(
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname a0q4w"
 #"orking) (read-case-sensitive #t) (teachpacks ((lib \"taxon.rkt\" \"i"
 #"nstalled-teachpacks\") (lib \"comp"
 #"ound.rkt\" \"installed-teachpacks\"))) (htdp-settings #(#t construct"
 #"or repeating-decimal #f #t none #f ((lib \"taxon.rkt\" \"installed-t"
 #"eachpacks\") (lib \"compound.rkt\" \"installed-teachpacks\")))))"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 7 #"student"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"assts"
0 0 4 3 1 #" "
0 0 14 3 3 #"mid"
0 0 4 3 1 #" "
0 0 14 3 5 #"final"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 56 #";; A student is a structure (make-student n a m f) where"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";; n is a string and a, m, and f are numbers."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 5 #"grade"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 4 #"mark"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";; A grade is a structure (make-grade n m) where"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 35 #";; n is a string and m is a number."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 58
#";; A list of students is either empty or (cons stud slist)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";; where stud is a student and slist is a list of students."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";; A list of grades is either empty or (cons gr glist) where"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 47 #";; gr is a grade and glist is a list of grades."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";; Constants"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"assts-weight"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"mid-weight"
0 0 4 3 1 #" "
0 0 20 3 3 #".30"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"final-weight"
0 0 4 3 1 #" "
0 0 20 3 3 #".50"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";; Sample data for examples and tests"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 2 #"vw"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-student"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"Vir"
0 0 19 3 1 #" "
0 0 19 3 1 #"g"
0 0 19 3 1 #" "
0 0 19 3 1 #"i"
0 0 19 3 1 #" "
0 0 19 3 1 #"n"
0 0 19 3 1 #" "
0 0 19 3 1 #"i"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"Wool"
0 0 19 3 1 #" "
0 0 19 3 3 #"f\" "
0 0 20 3 3 #"100"
0 0 19 3 1 #" "
0 0 20 3 3 #"100"
0 0 19 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 2 #"s2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-student"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"s2\""
0 0 4 3 1 #" "
0 0 20 3 2 #"75"
0 0 4 3 1 #" "
0 0 20 3 2 #"50"
0 0 4 3 1 #" "
0 0 20 3 2 #"60"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 1 #";"
0 0 17 3 30 #"90%, 81%, 54%, 63%, 40%, 54%, "
0 0 17 3 5 #"81%, "
0 0 17 11 15 #"72%, 81%, 99%, "
0 0 17 3 53 #"scored 50% on the midterm, and 60% on the final exam."
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 2 #"at"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-student"
0 0 19 3 6 #" \"Alan"
0 0 19 3 1 #" "
0 0 19 3 3 #"Tur"
0 0 19 3 4 #" ing"
0 0 19 3 2 #"\" "
0 0 20 3 2 #"90"
0 0 19 3 1 #" "
0 0 20 3 2 #"80"
0 0 19 3 1 #" "
0 0 20 3 2 #"40"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 2 #"an"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-student"
0 0 19 3 11 #" \"Anonymous"
0 0 19 3 2 #"\" "
0 0 20 3 2 #"30"
0 0 19 3 1 #" "
0 0 20 3 2 #"55"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"final-grade"
0 0 19 3 1 #" "
0 0 14 3 8 #"astudent"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 22 3 1 #"("
0 0 14 3 12 #"student-name"
0 0 19 3 1 #" "
0 0 14 3 8 #"astudent"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 13 #"             "
0 0 19 29 1 #"\n"
0 0 19 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 19 3 1 #" "
0 0 14 3 12 #"assts-weight"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"student-assts"
0 0 19 3 1 #" "
0 0 14 3 8 #"astudent"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 16 #"                "
0 0 19 29 1 #"\n"
0 0 19 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 19 3 1 #" "
0 0 14 3 10 #"mid-weight"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"student-mid"
0 0 19 3 1 #" "
0 0 14 3 8 #"astudent"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 16 #"                "
0 0 19 29 1 #"\n"
0 0 19 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 19 3 1 #" "
0 0 14 3 12 #"final-weight"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"student-final"
0 0 19 3 1 #" "
0 0 14 3 8 #"astudent"
0 0 22 3 5 #")))))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 24 #";; Tests for final-grade"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"final-grade"
0 0 19 3 1 #" "
0 0 14 3 2 #"vw"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 19 3 5 #" \"Vir"
0 0 19 3 1 #" "
0 0 19 3 1 #"g"
0 0 19 3 1 #" "
0 0 19 3 1 #"i"
0 0 19 3 1 #" "
0 0 19 3 1 #"n"
0 0 19 3 1 #" "
0 0 19 3 1 #"i"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"Wool"
0 0 19 3 1 #" "
0 0 19 3 3 #"f\" "
0 0 20 3 3 #"100"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"final-grade"
0 0 19 3 1 #" "
0 0 14 3 2 #"an"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 19 3 13 #" \"Anonymous\" "
0 0 20 3 4 #"27.5"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 52 #";; compute-grades: (listof student) ! (listof grade)"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 47 #";; Produces grade list from student list slist."
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 43 #";; Examples: (compute-grades empty) ) empty"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 53 #";; (compute-grades (cons vw (cons at (con an empty) )"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 22 #";; (cons (make-grade \""
0 0 17 3 8 #"Virginia"
0 0 17 3 1 #" "
0 0 17 3 11 #"Woolf\" 100)"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 22 #";; (cons (make-grade \""
0 0 17 3 4 #"Alan"
0 0 17 3 1 #" "
0 0 17 3 11 #"Turing\" 62)"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 22 #";; (cons (make-grade \""
0 0 17 3 24 #"Anonymous\" 27.5 empty)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"compute-grades"
0 0 24 3 1 #" "
0 0 14 3 5 #"slist"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"slist"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"final-grade"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"slist"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 14 #"compute-grades"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"slist"
0 0 22 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Tests for compute-grades"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 14 #"compute-grades"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 2 #"s2"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"compute-grades"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"compute-grades"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"vw"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"at"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 4 3 1 #" "
0 0 19 3 22 #"\"Vir g i n i a Wool f\""
0 0 4 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Alan"
0 0 19 3 1 #" "
0 0 19 3 3 #"Tur"
0 0 19 3 1 #" "
0 0 19 3 4 #"ing\""
0 0 24 3 1 #" "
0 0 20 3 2 #"62"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-grade"
0 0 4 3 1 #" "
0 0 19 3 11 #"\"Anonymous\""
0 0 4 3 1 #" "
0 6          10 4 5 #"55/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 5 #"empty"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".90"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".81"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".54"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".63"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".54"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".81"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".72"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".81"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #".20"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #".99"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 2 #".5"
0 0 4 3 1 #" "
0 0 20 3 2 #".3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 2 #".6"
0 0 4 3 1 #" "
0 0 20 3 3 #".50"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 20 3 4 #"0.01"
0 0 22 3 1 #")"
0           0
