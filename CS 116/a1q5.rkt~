;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname a1q5) (read-case-sensitive #t) (teachpacks ((lib "taxon.rkt" "installed-teachpacks") (lib "compound.rkt" "installed-teachpacks"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "taxon.rkt" "installed-teachpacks") (lib "compound.rkt" "installed-teachpacks")))))
;;********************************************************;;
;; CS 116 Assignment 0, Question 4                       ;;
;; Christopher Alert                                      ;;
;;                                                        ;;
;;(Determining the course grades of two students)         ;;
;;                                                        ;;
;;                                                        ;;
;;********************************************************;;

5. Complete the Scheme function most-As that consumes a list of course-result

structures and produces a list containing the names of all the courses which have the 

greatest number of A grades (i.e. grades 80 or higher). For example,  

(most-As  

  (list  

    (make-course-result "CS115" (list 89 72 45 96 80))  

    (make-course-result "CS135" (list 90 37 90))))  

=> (list "CS115")) 

;; Question 5
;; A gradelist is empty, or (cons g gl), where
;; g is a nat between 0 and 100, and
;; gl is a gradelist. 

(define-struct course-result (title grades))
;; A course-result is a structure (make-course-result t g), where
;; t is a string (title of course), 
;; g is a gradelist (grades of all students in the course)

(define (most-As courses)
  ...)
     