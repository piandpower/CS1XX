<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>CS 116 Tutorial 3: Beginning of Accumulative Recursion</title>

        
<link rel="stylesheet" type="text/css" href="/~cs116/style.css" />
<link rel="stylesheet" type="text/css" href="/~cs116/print.css" media="print" />

<!-- If this is IE, run javascript code to fix its behaviour -->
<!--[if lt IE 8]>
<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js"
        type="text/javascript"></script>
<![endif]-->

<!-- Function to insert email address invisible to crawlers -->
<script type="text/javascript">
   /* <![CDATA[ */
function insertMailto( $emailuser, $emailhost ) {
   document.write('<a href=\"mailto:' + $emailuser + ' at ' + $emailhost 
                  + '\">' + $emailuser + ' at ' + $emailhost + '</a>');
   /* ]]> */
}
</script>


</head>
<body>
<h1>CS 116: Introduction to Computer Science 2</h1>

<!-- This probably shouldn't be done as a table -->
<table id="main">
   <tr>
      <td id="nav-box">
         	  <ul id="nav-bar">
        <li><a href="/~cs116">Announcements&nbsp;/&nbsp;Home</a></li>
        <li><a href="/~cs116/personnel">Personnel</a>
        	<ul>
        		<li><a href="/~cs116/officehours">Office Hours</a></li>
        		<li><a href="/~cs116/needhelp">Need Help?</a></li>
        	</ul>
        </li>
        <li> <a href="/~cs116/assignments">Assignments</a> 
        	<ul>
        		<li><a href="https://www.student.cs.uwaterloo.ca/~cs116/publictest.php">Public Test System</a></li>
        		<li><a href="/~cs116/postmortem">Postmortems</a></li>
        		<li><a href="https://www.student.cs.uwaterloo.ca/~cs116/protect">Assignment Solutions</a></li>
        	</ul>
        </li>
        
        <li><a href="/~cs116/Instructor-Specific-page">Instructor Specific Pages</a></li>
        <li><a href="/~cs116/timetable">Timetable</a></li>
        <li><a href="/~cs116/exams">Exams</a></li>
        <li><a href="/~cs116/grading">Grading</a></li>
        <li><a href="/~cs116/resources">Resources&nbsp;&amp;&nbsp;Links</a></li>
        <li><a href="/~cs116/handouts">Handouts</a>
        	<ul> 
        	<li> <a href="/~cs116/errata">Errata </a> </li>
        	</ul>
        </li>
        <li><a href="/~cs116/styleGuide">Programming&nbsp;Style</a></li>
        <li><a href="/~cs116/tutorials">Tutorials</a></li>
		<!-- <li><a href="/~cs116/W09">Winter 2009</a></li> -->
      </ul>

      </td>
      <td id="main-box">


<h2 class="title">CS 116 Tutorial 3: Beginning of Accumulative Recursion (Sept 29 &amp; Oct 1, 2010)</h2>

<ol>

<li>Make a function <code>make-mapper</code> that consumes a function, and returns a
function that will apply that function to each member of a list.  For
example, <code>(make-mapper sqr)</code> makes a function that reads in a list of
numbers and returns the list of the squares of all elements of the
list. What is the contract of <code>make-mapper?</code></li>
      
<li>Write an accumulatively recursive function <code>sum-list</code> which consumes a list
of numbers and produces their sum.  Compare your accumulative version
with the natural structural recursive version (not using <code>foldr</code>): what
is the trace of <code>(sum-list (list 1 2 3))</code> in both cases?</li>

<li><p>Write an accumulatively recursive function <code>find</code> that reads in a list of
symbols <code>alos</code> and a symbol <code>sym</code>, and returns the list of indices of
positions in <code>alos</code> with symbol <code>sym</code>.  Recall that the first position in a
list has index 0.  You may use <code>reverse</code>.</p>

<p>For example, <code>(find '(a v d v) 'v)</code> should return <code>'(1 3)</code>, while 
<code>(find '(a v d v) 'q)</code> should return <code>empty</code>.</p></li>

<li>Extend <code>find</code> to a function <code>find-pattern</code> that identifies 
all positions in a list of symbols where a supplied pattern (list of symbols)
starts.</li>

<li><p>Develop a function <code>build-number</code> that consumes a list, <code>digits</code>,
of numbers between 0 and 9, and returns the number corresponding to <code>digits</code>.
(This is exercise 31.3.7 from HtDP.)</p>

<p>For example, <code>(build-number '(9 0 8))</code> should return <code>908</code>, while
<code>(build-number '(8 6))</code> should return <code>86</code>.</p>
<p>Trace the application <code>(build-number '(8 0 2))</code></p></li>

</ol>
</td>
</tr>
</table>

<div class="validator">
<!-- If this is IE, display this link -->
<!--[if lt IE 8]>
<a href="http://code.google.com/p/ie7-js/">
   <img style="border:0;width:88px"
   src="http://ie7-js.googlecode.com/svn/version/ie7.gif"
   alt="IE7 library used" />
</a>
<![endif]-->
<a href="http://validator.w3.org/check?uri=referer">
   <img style="border:0;width:88px;height:31px;"
   src="http://www.w3.org/Icons/valid-xhtml10-blue"
   alt="Valid XHTML 1.0 Strict" />
</a>
<a href="http://jigsaw.w3.org/css-validator/check?uri=referer">
   <img style="border:0;width:88px;height:31px;"
   src="http://jigsaw.w3.org/css-validator/images/vcss-blue"
   alt="Valid CSS!" />
</a>
</div>

<p class="lastModified">
Last modified on 
  
  Friday, 01 October 2010, at 12:40 hours.
</p>


</body>
</html>