;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname a5q1) (read-case-sensitive #t) (teachpacks ((lib "potatohead.rkt" "installed-teachpacks"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "potatohead.rkt" "installed-teachpacks")))))

;; Question 1


;; posn-length: posn posn-> num [not 0]
;;Produces the euclidean length of the line between
;;points j and k 
;;Examples: (posn-length (make-posn 1 1) (make-posn 2 1))=>1
(define (posn-length j k)
  (sqrt (+ (sqr (- (posn-x j) (posn-x k)))
           (sqr (- (posn-y j) (posn-y k))))))  
;;Tests:
(check-expect (posn-length (make-posn 1 1) (make-posn 2 1)) 1)
(check-expect (posn-length (make-posn 1 1) (make-posn 1 1)) 0)
(check-expect (posn-length (make-posn 10000 0) (make-posn 0 0)) 10000)



;;Examples:
;;(identify-objects (make-posn 0 0) 100
;;                  (cons (make-posn 20 -10) 
;;                        (cons (make-posn -100 0) 
;;                              (cons (make-posn 100 200)
;;                                   (cons (make-posn -90 -89) empty))))) 
;; => (cons (make-posn 20 -10) (cons (make-posn -100 0) empty))


(define (identify-objects r-loc radius l-ufos)
  (cond 
    [(empty? l-ufos) empty]
    [(<= (posn-length r-loc (first l-ufos)) radius)
     (cons (first l-ufos) (identify-objects r-loc radius (rest l-ufos)))]
    [else (identify-objects r-loc radius (rest l-ufos))]
    ))
;;Tests:
(check-expect 
 (identify-objects (make-posn 0 0) 100 
                   (cons (make-posn 20 -10)
                         (cons (make-posn -100 0) 
                               (cons (make-posn 100 200)
                                     (cons (make-posn -90 -89) empty)))))
              (cons (make-posn 20 -10) (cons (make-posn -100 0) empty)))